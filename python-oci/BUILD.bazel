load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@aspect_rules_py//py:defs.bzl", "py_binary", "py_image_layer")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_image_index", "oci_load")

py_binary(
    name = "main",
    srcs = ["main.py"],
    # Adding this just makes it so that when running ./main
    # I can test `import scapy` to see that the dep was properly
    # added to the virtualenv
    interpreter_options = ["-i"],
    deps = [
        "@pypi//scapy",
    ],
)

py_image_layer(
    name = "main_layers",
    binary = "main",
)

oci_image(
    name = "image",
    base = "@ubuntu",
    entrypoint = ["/bin/bash"],
    tars = [":main_layers"],
)

platform_transition_filegroup(
    name = "platform_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": ":linux_arm64",
        "@platforms//cpu:x86_64": ":linux_amd64",
    }),
)

oci_load(
    name = "load",
    image = ":platform_image",
    repo_tags = ["vinnybod/py-image:latest"],
)

# Platform setup

platform(
    name = "linux_arm64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:arm64",
    ],
    visibility = ["//visibility:public"],
)

platform(
    name = "linux_amd64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
    visibility = ["//visibility:public"],
)

config_setting(
    name = "platform_darwin_arm64",
    constraint_values = [
        "@platforms//os:macos",
        "@platforms//cpu:arm64",
    ],
)

config_setting(
    name = "platform_darwin_amd64",
    constraint_values = [
        "@platforms//os:macos",
        "@platforms//cpu:x86_64",
    ],
)

config_setting(
    name = "platform_linux_amd64",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)
